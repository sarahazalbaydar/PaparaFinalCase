// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ExpenseManagementDbContext))]
    [Migration("20250507050241_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AttachmentFilePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DecisionUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ExpensedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Domain.Entities.ExpenseCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Meals and food expenses during field work",
                            IsActive = false,
                            Title = "Meal"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Travel expenses including fuel, public transport, or company car usage",
                            IsActive = false,
                            Title = "Transportation"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Hotel or lodging costs during business trips",
                            IsActive = false,
                            Title = "Accommodation"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Stationery and basic tools used during field tasks",
                            IsActive = false,
                            Title = "Office Supplies"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Mobile data or communication-related expenses for work",
                            IsActive = false,
                            Title = "Mobile / Internet"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Costs incurred during customer visits or meetings",
                            IsActive = false,
                            Title = "Customer Meeting"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Small equipment or protective gear used on-site",
                            IsActive = false,
                            Title = "Field Equipment"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6719),
                            Description = "Miscellaneous expenses not covered by other categories",
                            IsActive = false,
                            Title = "Other"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("PaidAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Role")
                        .HasMaxLength(35)
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 316, DateTimeKind.Local).AddTicks(6940),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            IBAN = "TR120006200000000123456789",
                            IsActive = true,
                            LastName = "User",
                            Password = "$2a$11$qAYhfXxAt/HAlk24VAtgGO44nyMZhhacrP/s/CrJ/Lfi1wUQeq7Ym",
                            PhoneNumber = "5341234567",
                            Role = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2025, 5, 7, 8, 2, 40, 445, DateTimeKind.Local).AddTicks(2433),
                            Email = "employee@example.com",
                            FirstName = "Employee",
                            IBAN = "TR650006200000000987654321",
                            IsActive = true,
                            LastName = "User",
                            Password = "$2a$11$nRpqEQG.FeVVc394pncXNu5gCU9GrcxAva7MPNAQKsMY15i4Nc7J.",
                            PhoneNumber = "5309876543",
                            Role = 2,
                            UserName = "employee"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Expense", b =>
                {
                    b.HasOne("Domain.Entities.ExpenseCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.HasOne("Domain.Entities.Expense", "Expense")
                        .WithOne("Payment")
                        .HasForeignKey("Domain.Entities.Payment", "ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("Domain.Entities.Expense", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.ExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
